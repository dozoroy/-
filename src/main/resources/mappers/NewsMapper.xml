<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lyh.ssm.crud.dao.NewsMapper">
  <resultMap id="BaseResultMap" type="com.lyh.ssm.crud.bean.News">
    <id column="newsid" jdbcType="INTEGER" property="newsid" />
<!--    <result column="clubid" jdbcType="INTEGER" property="clubid" />-->
    <result column="newsname" jdbcType="VARCHAR" property="newsname" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <association property="club" column="clubid" javaType="com.lyh.ssm.crud.bean.Club" select="com.lyh.ssm.crud.dao.ClubMapper.selectByPrimaryKey"></association>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lyh.ssm.crud.bean.News">
    <result column="newslogo" jdbcType="LONGVARBINARY" property="newslogo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    newsid, clubid, newsname, content, time
  </sql>
  <sql id="Blob_Column_List">
    newslogo
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.lyh.ssm.crud.bean.NewsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from news
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.lyh.ssm.crud.bean.NewsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from news
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from news
    where newsid = #{newsid,jdbcType=INTEGER}
  </select>
  <select id="selectAll"  resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from news
  </select>
  <select id="selectNewsByUser" parameterType="java.lang.Integer"  resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from news
    where clubid in (select clubid
                    from   joinclub
                    where  userid = #{userid,jdbcType=INTEGER})
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from news
    where newsid = #{newsid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lyh.ssm.crud.bean.NewsExample">
    delete from news
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lyh.ssm.crud.bean.News">
    insert into news (newsid, clubid, newsname,
      content, time, newslogo
      )
    values (#{newsid,jdbcType=INTEGER}, #{clubid,jdbcType=INTEGER}, #{newsname,jdbcType=VARCHAR},
      #{content,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, #{newslogo,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lyh.ssm.crud.bean.News">
    insert into news
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="newsid != null">
        newsid,
      </if>
      <if test="clubid != null">
        clubid,
      </if>
      <if test="newsname != null">
        newsname,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="newslogo != null">
        newslogo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="newsid != null">
        #{newsid,jdbcType=INTEGER},
      </if>
      <if test="clubid != null">
        #{clubid,jdbcType=INTEGER},
      </if>
      <if test="newsname != null">
        #{newsname,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="newslogo != null">
        #{newslogo,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lyh.ssm.crud.bean.NewsExample" resultType="java.lang.Long">
    select count(*) from news
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update news
    <set>
      <if test="record.newsid != null">
        newsid = #{record.newsid,jdbcType=INTEGER},
      </if>
      <if test="record.clubid != null">
        clubid = #{record.clubid,jdbcType=INTEGER},
      </if>
      <if test="record.newsname != null">
        newsname = #{record.newsname,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.newslogo != null">
        newslogo = #{record.newslogo,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update news
    set newsid = #{record.newsid,jdbcType=INTEGER},
      clubid = #{record.clubid,jdbcType=INTEGER},
      newsname = #{record.newsname,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      newslogo = #{record.newslogo,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update news
    set newsid = #{record.newsid,jdbcType=INTEGER},
      clubid = #{record.clubid,jdbcType=INTEGER},
      newsname = #{record.newsname,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lyh.ssm.crud.bean.News">
    update news
    <set>
      <if test="clubid != null">
        clubid = #{clubid,jdbcType=INTEGER},
      </if>
      <if test="newsname != null">
        newsname = #{newsname,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="newslogo != null">
        newslogo = #{newslogo,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where newsid = #{newsid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lyh.ssm.crud.bean.News">
    update news
    set clubid = #{clubid,jdbcType=INTEGER},
      newsname = #{newsname,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      newslogo = #{newslogo,jdbcType=LONGVARBINARY}
    where newsid = #{newsid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lyh.ssm.crud.bean.News">
    update news
    set clubid = #{clubid,jdbcType=INTEGER},
      newsname = #{newsname,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP}
    where newsid = #{newsid,jdbcType=INTEGER}
  </update>
</mapper>
